import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score
import re

# Load the dataset
file_path = 'C:\\Users\\john3\\Desktop\\Pandas\\malware_classification.csv'
data = pd.read_csv(file_path)

# Function to extract features from a filename
def extract_features(filename):
    features = {
        'length': len(filename),
        'digit_count': sum(c.isdigit() for c in filename),
        'special_char_count': sum(not c.isalnum() for c in filename),
        'underscore_count': filename.count('_')
    }
    return pd.Series(features)

# Apply the feature extraction
data = data.join(data['filename'].apply(extract_features))

# Define features and labels
X = data[['length', 'digit_count', 'special_char_count', 'underscore_count']]
y = data['IsMalware']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Feature scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Initialize classifiers
classifiers = {
    'Random Forest': RandomForestClassifier(n_estimators=100),
    'Gradient Boosting': GradientBoostingClassifier(n_estimators=100),
    'Logistic Regression': LogisticRegression()
}

# Train and evaluate classifiers
for name, clf in classifiers.items():
    clf.fit(X_train, y_train)
    predictions = clf.predict(X_test)
    print(f"\n{name} Classifier Report:")
    print(classification_report(y_test, predictions))
    print("Accuracy:", accuracy_score(y_test, predictions))